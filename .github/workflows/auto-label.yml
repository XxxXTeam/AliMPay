name: Auto Label

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  label:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Label based on commit type
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const title = pr.title.toLowerCase();
            const labels = [];

            // 根据提交类型添加标签
            if (title.startsWith('feat')) {
              labels.push('enhancement');
            } else if (title.startsWith('fix')) {
              labels.push('bug');
            } else if (title.startsWith('docs')) {
              labels.push('documentation');
            } else if (title.startsWith('perf')) {
              labels.push('performance');
            } else if (title.startsWith('refactor')) {
              labels.push('refactor');
            } else if (title.startsWith('test')) {
              labels.push('test');
            } else if (title.startsWith('ci') || title.startsWith('build')) {
              labels.push('ci/cd');
            } else if (title.startsWith('chore')) {
              labels.push('chore');
            }

            // 根据文件变更添加标签
            const files = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number
            });

            const changedFiles = files.data.map(f => f.filename);
            
            if (changedFiles.some(f => f.includes('.github/workflows'))) {
              labels.push('ci/cd');
            }
            if (changedFiles.some(f => f.includes('Dockerfile') || f.includes('docker-compose'))) {
              labels.push('docker');
            }
            if (changedFiles.some(f => f.endsWith('.md'))) {
              labels.push('documentation');
            }
            if (changedFiles.some(f => f.includes('internal/database') || f.includes('internal/model'))) {
              labels.push('database');
            }
            if (changedFiles.some(f => f.includes('internal/handler') || f.includes('internal/service'))) {
              labels.push('backend');
            }
            if (changedFiles.some(f => f.includes('web/'))) {
              labels.push('frontend');
            }

            // 添加标签
            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                labels: [...new Set(labels)]  // 去重
              });
            }

