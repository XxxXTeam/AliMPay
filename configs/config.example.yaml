# ============================================================================
# AliMPay 多二维码独立API配置示例
# Multiple QR Codes with Independent API Configuration Example
# ============================================================================
#
# 本配置文件展示如何为不同的二维码配置独立的支付宝API
# This config demonstrates how to configure independent Alipay API for different QR codes
#
# 使用场景 / Use Cases:
# 1. 多个支付宝商户账号 / Multiple Alipay merchant accounts
# 2. 不同业务线使用不同账号 / Different business lines with different accounts
# 3. 风险隔离和负载分散 / Risk isolation and load distribution
#
# ============================================================================

server:
  host: "0.0.0.0"
  port: 8080
  mode: "release"
  read_timeout: 60
  write_timeout: 60
  base_url: ""

# ============================================================================
# 全局支付宝配置 / Global Alipay Configuration
# ============================================================================
# 作用：
# 1. 作为默认配置（二维码未配置独立API时使用）
# 2. 为独立API配置提供后备值（补充缺失字段）
# ============================================================================
alipay:
  server_url: "https://openapi.alipay.com"
  app_id: "2021000000000000"              # 默认/后备商户的AppID
  private_key: "MIIEvQIBADANBgkqhkiG9w0BAQEFAASCB..."
  alipay_public_key: "MIIBIjANBgkqhkiG9w0BAQEFAAOC..."
  transfer_user_id: "2088000000000000"    # 默认/后备商户的用户ID
  sign_type: "RSA2"
  charset: "UTF-8"
  format: "json"

database:
  type: "sqlite3"
  path: "./data/alimpay.db"
  max_idle_conns: 10
  max_open_conns: 100
  conn_max_lifetime: 3600

# ============================================================================
# 支付配置 - 多二维码独立API模式
# Payment Configuration - Multiple QR Codes with Independent APIs
# ============================================================================
payment:
  max_wait_time: 300
  check_interval: 3
  query_minutes_back: 30
  order_timeout: 300
  auto_cleanup: true
  qr_code_size: 300
  qr_code_margin: 10
  
  # 经营码收款配置
  business_qr_mode:
    enabled: true
    
    # ========================================================================
    # 多二维码配置示例 - 每个二维码使用独立的API
    # Multiple QR Codes Example - Each with Independent API
    # ========================================================================
    qr_code_paths:
      # ----------------------------------------------------------------
      # 二维码1 - 主营业务账号（商户A）
      # QR Code 1 - Main Business Account (Merchant A)
      # ----------------------------------------------------------------
      - id: "main_merchant"
        path: "./qrcode/merchant_a_qr.png"
        code_id: "fkx123456"               # 从收款码链接获取
        enabled: true
        priority: 1                         # 最高优先级
        
        # 商户A的独立API配置
        alipay_api:
          server_url: "https://openapi.alipay.com"
          app_id: "2021001111111111"        # 商户A的AppID
          private_key: |
            MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC...
            # 商户A的完整私钥（可以使用多行格式）
          alipay_public_key: |
            MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA...
            # 支付宝公钥（商户A对应的）
          transfer_user_id: "2088111111111111"  # 商户A的用户ID
          sign_type: "RSA2"
          charset: "UTF-8"
          format: "json"
      
      # ----------------------------------------------------------------
      # 二维码2 - 备用账号（商户B）
      # QR Code 2 - Backup Account (Merchant B)
      # ----------------------------------------------------------------
      - id: "backup_merchant"
        path: "./qrcode/merchant_b_qr.png"
        code_id: "fkx789012"
        enabled: true
        priority: 2
        
        # 商户B的独立API配置
        alipay_api:
          app_id: "2021002222222222"        # 商户B的AppID
          private_key: "MIIEvQIBADBNBgkqhkiG9w0BAQEFAASCB..."
          alipay_public_key: "MIIBIjANBgkqhkiG9w0BAQEFAAOC..."
          transfer_user_id: "2088222222222222"
          # 其他字段省略，将使用全局配置
      
      # ----------------------------------------------------------------
      # 二维码3 - VIP客户专用账号（商户C）
      # QR Code 3 - VIP Customer Exclusive Account (Merchant C)
      # ----------------------------------------------------------------
      - id: "vip_merchant"
        path: "./qrcode/merchant_c_qr.png"
        code_id: "fkxVIP001"
        enabled: true
        priority: 1                         # 与第一个相同优先级
        
        # 商户C的独立API配置（VIP专用）
        alipay_api:
          app_id: "2021003333333333"
          private_key: "MIIEvQIBADCNBgkqhkiG9w0BAQEFAASCB..."
          alipay_public_key: "MIIBIjANBgkqhkiG9w0BAQEFAAOC..."
          transfer_user_id: "2088333333333333"
      
      # ----------------------------------------------------------------
      # 二维码4 - 测试环境（使用全局配置）
      # QR Code 4 - Test Environment (Using Global Config)
      # ----------------------------------------------------------------
      - id: "test_qr"
        path: "./qrcode/test_qr.png"
        code_id: "fkxTEST01"
        enabled: false                      # 默认禁用，需要时启用
        priority: 10                        # 最低优先级
        # 不配置 alipay_api，将使用全局的 alipay 配置
    
    # 二维码轮询策略
    # round_robin: 轮询（默认，推荐）
    # random: 随机
    # least_used: 最少使用
    polling_mode: "round_robin"
    
    # 金额相关配置
    amount_offset: 0.01
    match_tolerance: 300
    payment_timeout: 300
  
  # 防风控URL配置
  anti_risk_url:
    enabled: true
    outer_app_id: "20000218"
    inner_app_id: "20000116"
    mdeduct_landing_url: "https://render.alipay.com/p/c/mdeduct-landing"
    render_scheme_url: "https://render.alipay.com/p/s/i"

# ============================================================================
# 商户配置
# ============================================================================
merchant:
  id: ""                                   # 自动生成
  key: ""                                  # 自动生成
  rate: 0

# ============================================================================
# 日志配置
# ============================================================================
logging:
  level: "info"
  format: "json"
  output: "file"
  file_path: "./logs/alimpay.log"
  max_size: 100
  max_backups: 10
  max_age: 30
  compress: true

# ============================================================================
# 监控配置
# ============================================================================
# 注意：启用多API配置后，监控服务会为每个独立API创建单独的账单查询服务
# Note: With multi-API config, monitor service creates separate bill query service for each API
# ============================================================================
monitor:
  enabled: true
  interval: 5
  lock_timeout: 300

# ============================================================================
# 配置说明 / Configuration Notes
# ============================================================================
#
# 1. API配置优先级 / API Configuration Priority:
#    - 优先使用二维码的 alipay_api 配置
#    - alipay_api 中缺失的字段从全局 alipay 配置补充
#    - 完全没有 alipay_api 则使用全局配置
#
# 2. 监控服务工作机制 / Monitor Service Mechanism:
#    - 系统启动时为每个配置了独立API的二维码创建专属的账单查询服务
#    - 订单查询时自动使用对应二维码的API配置
#    - 如果某个API失败，会尝试使用默认API（降级机制）
#
# 3. 性能建议 / Performance Recommendations:
#    - 建议配置不超过5个独立API
#    - 每个API都会创建独立的HTTP客户端
#    - 监控间隔建议不低于5秒
#
# 4. 安全建议 / Security Recommendations:
#    - 妥善保管所有私钥，不要提交到代码仓库
#    - 定期轮换密钥
#    - 为不同业务线使用不同的商户账号
#
# 5. 故障排查 / Troubleshooting:
#    - 查看日志：tail -f ./logs/alimpay.log
#    - 确认AppID、私钥、公钥配置正确
#    - 检查网关地址是否正确（生产/沙箱）
#
